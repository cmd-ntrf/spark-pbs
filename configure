#!/usr/bin/env bash

while true; do
  fromuser=""
  if [ -z "$SPARK_HOME_PATH" ]; then
    default_spark_home=${SPARK_HOME}
    read -p "Please specify the location of Spark. [Default is $default_spark_home]: " SPARK_HOME_PATH
    fromuser="1"
    if [ -z "$SPARK_HOME_PATH" ]; then
      SPARK_HOME_PATH=$default_spark_home
    fi
  fi
  if [ -e "$SPARK_HOME_PATH" ]; then
    break
  fi
  echo "Invalid Spark home path. ${SPARK_HOME_PATH} cannot be found" 1>&2
  if [ -z "$fromuser" ]; then
    exit 1
  fi
  SPARK_HOME_PATH=""
  # Retry
done

while true; do
  fromuser=""
  if [ -z "$JAVA_HOME_PATH" ]; then
    default_java_home=${JAVA_HOME}
    read -p "Please specify the location of Java. [Default is $default_java_home]: " JAVA_HOME_PATH
    fromuser="1"
    if [ -z "$JAVA_HOME_PATH" ]; then
      JAVA_HOME_PATH=$default_java_home
    fi
  fi
  if [ -e "$JAVA_HOME_PATH" ]; then
    break
  fi
  echo "Invalid Java home path. ${JAVA_HOME_PATH} cannot be found" 1>&2
  if [ -z "$fromuser" ]; then
    exit 1
  fi
  JAVA_HOME_PATH=""
  # Retry
done

while true; do
  fromuser=""
  if [ -z "$LOCAL_DIR_PATH" ]; then
    default_local_dir="/tmp"
    read -p "Please specify the path for local and worker directory. [Default is $default_local_dir]: " SPARK_LOCAL_DIR
    fromuser="1"
    if [ -z "$SPARK_LOCAL_DIR" ]; then
      SPARK_LOCAL_DIR=$default_local_dir
    fi
  fi
  if [[ "$SPARK_LOCAL_DIR" =~ ^(/)?([^/\0]+(/)?)+$ ]]; then
    break
  fi
  echo "Invalid Spark local directory path: $SPARK_LOCAL_DIR." 1>&2
  if [ -z "$fromuser" ]; then
    exit 1
  fi
  SPARK_LOCAL_DIR=""
  # Retry
done

while true; do
  fromuser=""
  if [ -z "$SPARK_WORKER_MEMORY" ]; then
    default_worker_mem="10g"
    read -p "Please specify the quantity of memory available per worker. [Default is: \"$default_worker_mem\"]: " SPARK_WORKER_MEMORY 
    fromuser=1
    if [ -z "$SPARK_WORKER_MEMORY" ]; then
      SPARK_WORKER_MEMORY=$default_worker_mem
    fi
  fi
  if [[ "$SPARK_WORKER_MEMORY" =~ ^[1-9][0-9]*[mgt]$ ]]; then
    break
  fi
  echo "Invalid worker memory format: ${SPARK_WORKER_MEMORY}." 1>&2
  if [ -z "$fromuser" ]; then
    exit 1
  fi
  SPARK_WORKER_MEMORY=""
  # Retry
done

cp conf/spark-default.conf{.template,}
sed -i "s;spark.executor.memory <FILL_IN>;spark.executor.memory $SPARK_WORKER_MEMORY;g" conf/spark-default.conf

cp conf/spark-env.sh{.template,}
sed -i "s;JAVA_HOME=\"<FILL_IN>\";JAVA_HOME=\"$JAVA_HOME_PATH\";g" conf/spark-env.sh
sed -i "s;SPARK_LOCAL_DIRS=\"<FILL_IN>\";SPARK_LOCAL_DIRS=\"$SPARK_LOCAL_DIR\";g" conf/spark-env.sh
sed -i "s;SPARK_WORKER_DIR=\"<FILL_IN>\";SPARK_WORKER_DIR=\"$SPARK_LOCAL_DIR\";g" conf/spark-env.sh

cp Makefile{.template,}
sed -i "1i spark_home := $SPARK_HOME_PATH" Makefile
